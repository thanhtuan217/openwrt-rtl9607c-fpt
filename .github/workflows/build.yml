#
# https://github.com/thanhtuan217/openwrt-rtl9607c-fpt
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Build OpenWrt for G-97RG6W

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 0 * * 1

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkg-config python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone source code
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        # Sử dụng các feed của bản phát hành ổn định để tránh lỗi
        echo "src-git-full packages https://git.openwrt.org/feed/packages.git;openwrt-23.05" > feeds.conf
        echo "src-git-full luci https://git.openwrt.org/project/luci.git;openwrt-23.05" >> feeds.conf
        echo "src-git-full routing https://git.openwrt.org/feed/routing.git;openwrt-23.05" >> feeds.conf
        echo "src-git-full telephony https://git.openwrt.org/feed/telephony.git;openwrt-23.05" >> feeds.conf
        
    - name: Load custom feeds (nếu có)
      run: |
        cd openwrt
        # Đây là nơi để thêm các feed tùy chỉnh chứa driver Realtek nếu bạn tìm thấy
        # Ví dụ: git clone https://github.com/user/rtl_feed.git packages/rtl
        
    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && cp -r files openwrt/
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/
        chmod +x $DIY_P1_SH
        cd openwrt
        ../$DIY_P1_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: github.event.inputs.ssh == 'true'

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "Bắt đầu build với $(nproc) luồng"
        make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '=[ym]' .config | sed 's/CONFIG_//g' > ../config.txt
        
    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE_PATH=$(pwd)" >> $GITHUB_ENV
        echo "RELEASE_TAG=$(date +"%Y.%m.%d-%H%M")-by-Gemini" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        files: ${{ env.FIRMWARE_PATH }}/*
